import java_cup.runtime.Symbol;

parser code {:
    // Inicializar la tabla de símbolos
    SymbolTable symbolTable = new SymbolTable();
:};

terminal String IDENTIFICADOR, LITERAL_STRING;
terminal Integer LITERAL_ENTERO;
terminal Float LITERAL_FLOTANTE;
terminal Character LITERAL_CHAR;

terminal TIPO_ENTERO, TIPO_FLOTANTE, TIPO_BOOLEANO, TIPO_CHAR, TIPO_STRING;
terminal IF, ELSE, WHILE, FOR, SWITCH, CASE, DEFAULT;
terminal SUMA, RESTA, DIVISION, MULTIPLICACION, MODULO, POTENCIA;
terminal MENOR, MENOR_IGUAL, MAYOR, MAYOR_IGUAL, IGUAL, DIFERENTE;
terminal AND, OR, NOT;
terminal INCREMENTO, DECREMENTO;
terminal BREAK, RETURN, DOS_PUNTOS, PRINT, READ;

terminal PARENTESIS_ABRE, PARENTESIS_CIERRA;
terminal CORCHETE_ABRE, CORCHETE_CIERRA;
terminal LLAVE_ABRE, LLAVE_CIERRA;
terminal ASIGNACION, FIN_EXPRESION;

terminal ERROR;

non terminal programa;
non terminal lista_sentencias;
non terminal sentencia;

start with programa;

programa ::= lista_sentencias;

lista_sentencias ::= sentencia
                   | lista_sentencias sentencia;

sentencia ::= IDENTIFICADOR ASIGNACION LITERAL_ENTERO FIN_EXPRESION
            {:
                // Asignar el valor entero a la tabla de símbolos
                String varName = ((String) $1);
                if (symbolTable.exists(varName)) {
                    symbolTable.update(varName, $3);
                } else {
                    System.err.println("Error: Variable no definida: " + varName);
                }
            :}
            | IDENTIFICADOR ASIGNACION LITERAL_FLOTANTE FIN_EXPRESION
            {:
                // Asignar el valor flotante a la tabla de símbolos
                String varName = ((String) $1);
                if (symbolTable.exists(varName)) {
                    symbolTable.update(varName, $3);
                } else {
                    System.err.println("Error: Variable no definida: " + varName);
                }
            :}
            | IDENTIFICADOR ASIGNACION LITERAL_STRING FIN_EXPRESION
            {:
                // Asignar el valor string a la tabla de símbolos
                String varName = ((String) $1);
                if (symbolTable.exists(varName)) {
                    symbolTable.update(varName, $3);
                } else {
                    System.err.println("Error: Variable no definida: " + varName);
                }
            :}
            | IDENTIFICADOR ASIGNACION LITERAL_CHAR FIN_EXPRESION
            {:
                // Asignar el valor char a la tabla de símbolos
                String varName = ((String) $1);
                if (symbolTable.exists(varName)) {
                    symbolTable.update(varName, $3);
                } else {
                    System.err.println("Error: Variable no definida: " + varName);
                }
            :}
            | PRINT PARENTESIS_ABRE IDENTIFICADOR PARENTESIS_CIERRA FIN_EXPRESION
            {:
                // Imprimir el valor de la variable desde la tabla de símbolos
                String varName = ((String) $3);
                if (symbolTable.exists(varName)) {
                    SymbolInfo info = symbolTable.lookup(varName);
                    System.out.println("Valor de " + varName + ": " + info.value);
                } else {
                    System.err.println("Error: Variable no definida: " + varName);
                }
            :}
            | IF PARENTESIS_ABRE IDENTIFICADOR PARENTESIS_CIERRA LLAVE_ABRE lista_sentencias LLAVE_CIERRA
            | WHILE PARENTESIS_ABRE IDENTIFICADOR PARENTESIS_CIERRA LLAVE_ABRE lista_sentencias LLAVE_CIERRA
            | FOR PARENTESIS_ABRE IDENTIFICADOR PARENTESIS_CIERRA LLAVE_ABRE lista_sentencias LLAVE_CIERRA
            | SWITCH PARENTESIS_ABRE IDENTIFICADOR PARENTESIS_CIERRA LLAVE_ABRE lista_sentencias LLAVE_CIERRA
            | BREAK FIN_EXPRESION
            | RETURN IDENTIFICADOR FIN_EXPRESION
            | ERROR;

// Declaración de variables
declaration ::= type IDENTIFICADOR {:
    String varName = ((String) $2);
    String varType = ((String) $1);

    // Insertar la variable en la tabla de símbolos
    if (!symbolTable.exists(varName)) {
        symbolTable.insert(varName, new SymbolInfo(varType, null));
    } else {
        System.err.println("Error: Variable " + varName + " ya está definida.");
    }
:};